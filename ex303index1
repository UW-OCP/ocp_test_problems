Constants = [m0 = 2.0, m1 = 0.5, m2 = 0.5, r1 = 0.5, r2 = 0.5, g = 9.81, pi = 3.141592654];
Variables = [_epsilon_];
StateVariables = [x, theta1, theta2, v, omega1, omega2]; #, ax, alpha1, alpha2];
ControlVariables = [v_dot1, omega1_dot2, omega2_dot3, F];
DifferentialEquations = [v, omega1, omega2, v_dot1, omega1_dot2, omega2_dot3];
InitialConstraints = [x, theta1+pi, theta2+pi, v, omega1, omega2];
TerminalConstraints = [x-1.0, theta1+pi, theta2+pi, v, omega1, omega2];
CostFunctional = 0.5*(F*F + _epsilon_*(v_dot1*v_dot1 + omega1_dot2*omega1_dot2 + omega2_dot3*omega2_dot3));
Nodes = 101;
Tolerance = 1.0e-6;
Display = YES;
OutputFile = "ex303index1.data";
StateEstimate = [t, -pi, -pi, t*(1-t), t*(1-t), t*(1-t)];
ControlEstimate = [0.1, 0.1, 0.1, 0.1];

EqualityConstraints = [((0.5*m2)*(0 - (r2*sin(theta2)) + 0 - (r2*sin(theta2))))*omega2_dot3 + ((0.5*m1)*(0 - (r1*sin(theta1)) + 0 - (r1*sin(theta1))) + (0.5*m2)*(0 - (r1*sin(theta1)) + 0 - (r1*sin(theta1))))*omega1_dot2 + (0.5*m0 + 0.5*m0 + (0.5*m1)*2 + (0.5*m2)*2)*v_dot1 + ((0.5*m2)*(0 - ((r2*omega2)*cos(theta2)) + 0 - ((r2*omega2)*cos(theta2))))*omega2 + ((0.5*m1)*(0 - ((r1*omega1)*cos(theta1)) + 0 - ((r1*omega1)*cos(theta1))) + (0.5*m2)*(0 - ((r1*omega1)*cos(theta1)) + 0 - ((r1*omega1)*cos(theta1))))*omega1 + 0 - F,
 ((0.5*m2)*((0 - (r1*sin(theta1)))*(0 - (r2*sin(theta2))) + (0 - (r2*sin(theta2)))*(0 - (r1*sin(theta1))) + (r1*cos(theta1))*(r1*cos(theta2)) + (r1*cos(theta2))*(r1*cos(theta1))))*omega2_dot3 + ((0.5*m1)*((0 - (r1*sin(theta1)))*(0 - (r1*sin(theta1))) + (0 - (r1*sin(theta1)))*(0 - (r1*sin(theta1))) + (r1*cos(theta1))*(r1*cos(theta1)) + (r1*cos(theta1))*(r1*cos(theta1))) + (0.5*m2)*((0 - (r1*sin(theta1)))*(0 - (r1*sin(theta1))) + (0 - (r1*sin(theta1)))*(0 - (r1*sin(theta1))) + (r1*cos(theta1))*(r1*cos(theta1)) + (r1*cos(theta1))*(r1*cos(theta1))))*omega1_dot2 + ((0.5*m1)*(0 - (r1*sin(theta1)) + 0 - (r1*sin(theta1))) + (0.5*m2)*(0 - (r1*sin(theta1)) + 0 - (r1*sin(theta1))))*v_dot1 + ((0.5*m2)*((0 - (r1*sin(theta1)))*(0 - ((r2*omega2)*cos(theta2))) + (0 - ((r2*omega2)*cos(theta2)))*(0 - (r1*sin(theta1))) + (r1*cos(theta1))*((r1*omega2)*(-1*sin(theta2))) + ((r1*omega2)*(-1*sin(theta2)))*(r1*cos(theta1))))*omega2 + ((0.5*m1)*((0 - (r1*cos(theta1)))*(v - ((r1*omega1)*sin(theta1))) + (0 - (r1*sin(theta1)))*(0 - ((r1*omega1)*cos(theta1))) + (0 - ((r1*omega1)*cos(theta1)))*(0 - (r1*sin(theta1))) + (v - ((r1*omega1)*sin(theta1)))*(0 - (r1*cos(theta1))) + (r1*(-1*sin(theta1)))*((r1*omega1)*cos(theta1)) + (r1*cos(theta1))*((r1*omega1)*(-1*sin(theta1))) + ((r1*omega1)*(-1*sin(theta1)))*(r1*cos(theta1)) + ((r1*omega1)*cos(theta1))*(r1*(-1*sin(theta1)))) + (0.5*m2)*((0 - (r1*cos(theta1)))*(v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2))) + (0 - (r1*sin(theta1)))*(0 - ((r1*omega1)*cos(theta1))) + (0 - ((r1*omega1)*cos(theta1)))*(0 - (r1*sin(theta1))) + (v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2)))*(0 - (r1*cos(theta1))) + (r1*(-1*sin(theta1)))*((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2)) + (r1*cos(theta1))*((r1*omega1)*(-1*sin(theta1))) + ((r1*omega1)*(-1*sin(theta1)))*(r1*cos(theta1)) + ((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2))*(r1*(-1*sin(theta1)))))*omega1 + 0 - ((0.5*m1)*((0 - ((r1*omega1)*cos(theta1)))*(v - ((r1*omega1)*sin(theta1))) + (v - ((r1*omega1)*sin(theta1)))*(0 - ((r1*omega1)*cos(theta1))) + ((r1*omega1)*(-1*sin(theta1)))*((r1*omega1)*cos(theta1)) + ((r1*omega1)*cos(theta1))*((r1*omega1)*(-1*sin(theta1)))) + (0.5*m2)*((0 - ((r1*omega1)*cos(theta1)))*(v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2))) + (v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2)))*(0 - ((r1*omega1)*cos(theta1))) + ((r1*omega1)*(-1*sin(theta1)))*((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2)) + ((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2))*((r1*omega1)*(-1*sin(theta1))))) + (m1*g)*(r1*cos(theta1)) + (m2*g)*(r1*cos(theta1)),
 ((0.5*m2)*((0 - (r2*sin(theta2)))*(0 - (r2*sin(theta2))) + (0 - (r2*sin(theta2)))*(0 - (r2*sin(theta2))) + (r1*cos(theta2))*(r1*cos(theta2)) + (r1*cos(theta2))*(r1*cos(theta2))))*omega2_dot3 + ((0.5*m2)*((0 - (r2*sin(theta2)))*(0 - (r1*sin(theta1))) + (0 - (r1*sin(theta1)))*(0 - (r2*sin(theta2))) + (r1*cos(theta2))*(r1*cos(theta1)) + (r1*cos(theta1))*(r1*cos(theta2))))*omega1_dot2 + ((0.5*m2)*(0 - (r2*sin(theta2)) + 0 - (r2*sin(theta2))))*v_dot1 + ((0.5*m2)*((0 - (r2*cos(theta2)))*(v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2))) + (0 - (r2*sin(theta2)))*(0 - ((r2*omega2)*cos(theta2))) + (0 - ((r2*omega2)*cos(theta2)))*(0 - (r2*sin(theta2))) + (v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2)))*(0 - (r2*cos(theta2))) + (r1*(-1*sin(theta2)))*((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2)) + (r1*cos(theta2))*((r1*omega2)*(-1*sin(theta2))) + ((r1*omega2)*(-1*sin(theta2)))*(r1*cos(theta2)) + ((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2))*(r1*(-1*sin(theta2)))))*omega2 + ((0.5*m2)*((0 - (r2*sin(theta2)))*(0 - ((r1*omega1)*cos(theta1))) + (0 - ((r1*omega1)*cos(theta1)))*(0 - (r2*sin(theta2))) + (r1*cos(theta2))*((r1*omega1)*(-1*sin(theta1))) + ((r1*omega1)*(-1*sin(theta1)))*(r1*cos(theta2))))*omega1 + 0 - ((0.5*m2)*((0 - ((r2*omega2)*cos(theta2)))*(v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2))) + (v - ((r1*omega1)*sin(theta1)) - ((r2*omega2)*sin(theta2)))*(0 - ((r2*omega2)*cos(theta2))) + ((r1*omega2)*(-1*sin(theta2)))*((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2)) + ((r1*omega1)*cos(theta1) + (r1*omega2)*cos(theta2))*((r1*omega2)*(-1*sin(theta2))))) + (m2*g)*(r2*cos(theta2))];
